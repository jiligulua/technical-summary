求两个字符串的公共子串长度？

最长公共子序列的意义就在于能够比较两个文本，并确定它们存在最大的相同内容。用处广泛，如git的diff版本比较，生物信息学基础等。

显然最长公共子序列就是在两个序列的所有子序列中，包含元素最多的序列称为最长公共子序列。

优先列出三个序列，并从中观察它们的特征，一般计算机科学中的思维都是从后往前作为问题的切入点。
X=(x1,x2, ..., xm)
Y=(y1,y2, ..., yn)
Z=(z1,z2, ..., zk)

在一个点上枚举所有的可能性

当xm=yn，必然有zn=xm=yn，因为这三者是公共相等的，从而可知Zk-1是Xm-1和Yn-1的公共子串
当xm不等于yn时，
  若有zk不等于xm，可推理出，公共子串在（xm-1，yn）中
  若有zk不等于yn，可推理出，公共子串在（xm， yn-1）中

定义c[i][j]表示Xi和Yj的公共子串长度，其行表示X的元素编号，列表示Y的元素编号。这样就组成一个表，存储LCS的长度。

递归定义为：

           | 0				 i=0 || j=0
c[i][j] =  | c[i-1][j-1]	 i,j>0 && xi=yj
		   | max(c[i][j-1], c[i-1][j])		i,j>0 && xi != yj

先有这个递归公式，之后才有二维图形表格进行形象分析的结果。

还有一个问题是，如何打印出公共子序列呢？


参考：
