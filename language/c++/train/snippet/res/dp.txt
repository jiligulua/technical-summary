递归到动规的一般转化方法
递归函数有n个参数，就定义一个n维的数组，数组的下标是递归函数参数的取值范围，
数组元素的值是递归函数的返回值，这样就可以从边界值开始， 逐步填充数组，相当
于计算递归函数值的逆过程。

动规解题的一般思路

将原问题分解为子问题
1.把原问题分解为若干个子问题，子问题和原问题形式相同 或类似，只不过规模变小
了。子问题都解决，原问题即解决(数字三角形例)。子问题的解一旦求出就会被保存，
所以每个子问题只需求解一次。

2.确定状态
和子问题相关的各个变量的一组取值，是一个“状态”。一个“状态”对应于一个或多个子
问题，所谓某个“状态”下的“值”，就是这个“状态”所对应的子问题的解。

整个问题的时间复杂度是状态数目乘以计算每个状态所需时间。在数字三角形里每个“状
态”只需要经过一次。

3.确定一些初始状态(边界状态)的值
以“数字三角形”为例，初始状态就是底边数字，值就是底边数字值。

4.确定状态转移方程
找出如何从一个或多个“值”已知的 “状态”，求出另一个“状态”的“值”（可以用递推公式
表示）

# 能用动规解决的问题的特点

1. 问题具有最优子结构性质。如果问题的最优解所包含的子问题的解也是最优的，该问题就
具有最优子结构性质。

2. 无后效性。当前的若干个状态值一旦确定，则此后过程的演变就只和这若干个状态的值有
关，和之前是采取哪种手段或经过哪条路径演变到当前的这若干个状态，没有关系。